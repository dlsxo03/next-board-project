# 게시판 프로젝트 PRD

## 1. 프로젝트 개요
- **프로젝트명**: Next Board
- **기술 스택**: 
  - Frontend: Next.js, TypeScript, TailwindCSS
  - Backend: Next.js API Routes
  - Database: MariaDB
  - ORM: Prisma
  - 인증: NextAuth.js

## 2. 핵심 기능

### 2.1 사용자 인증
- 회원가입
  - 이메일, 비밀번호, 닉네임 입력
  - 이메일 중복 확인
  - 비밀번호 유효성 검사
- 로그인/로그아웃
  - 이메일/비밀번호 로그인
  - 소셜 로그인 (Google) 지원
  - 로그인 상태 유지
  - 안전한 로그아웃

### 2.2 공지사항
- 관리자만 작성/수정/삭제 가능
- 일반 사용자는 조회만 가능
- 주요 기능:
  - 공지사항 목록 보기
  - 공지사항 상세 보기
  - 공지사항 작성/수정/삭제 (관리자)
  - 중요 공지 상단 고정

### 2.3 일반 게시판
- 로그인한 사용자만 글 작성 가능
- 주요 기능:
  - 게시글 목록 보기
  - 게시글 상세 보기
  - 게시글 작성/수정/삭제
  - 댓글 작성/수정/삭제
  - 게시글 검색
  - 카테고리 분류

## 3. UI/UX 요구사항
- 반응형 디자인 적용
- 모던하고 깔끔한 디자인
- 다크모드 지원
- 직관적인 네비게이션
- 로딩 상태 표시
- 에러 처리 및 피드백

## 4. 데이터베이스 구조

### Users 테이블
```sql
- id (PK)
- email
- password
- nickname
- role (admin/user)
- created_at
- updated_at
```

### Notice 테이블
```sql
- id (PK)
- title
- content
- author_id (FK -> Users)
- is_pinned
- created_at
- updated_at
```

### Posts 테이블
```sql
- id (PK)
- title
- content
- author_id (FK -> Users)
- category
- view_count
- created_at
- updated_at
```

### Comments 테이블
```sql
- id (PK)
- content
- post_id (FK -> Posts)
- author_id (FK -> Users)
- created_at
- updated_at
```

## 5. 보안 요구사항
- 사용자 비밀번호 암호화
- XSS 방지
- CSRF 토큰 적용
- API 엔드포인트 보안
- 입력값 검증

## 6. 성능 요구사항
- 페이지 로딩 시간 최적화
- 이미지 최적화
- 데이터베이스 쿼리 최적화
- 캐싱 전략 수립
